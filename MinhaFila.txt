/**
 * Implementação de uma estrutura de dados Fila (Queue) para inteiros.
 * Métodos: enqueue, dequeue, front, rear, isEmpty, size
 */

public class MinhaFila {
    private int[] elementos;
    private int inicio;
    private int fim;
    private int tamanho;

    public MinhaFila(int capacidade) {
        elementos = new int[capacidade];
        inicio = 0;
        fim = 0;
        tamanho = 0;
    }

    // enqueue() → Adiciona um inteiro à fila.
    public void enqueue(int valor) {
        if (tamanho == elementos.length) {
            throw new IllegalStateException("Fila cheia");
        }
        elementos[fim] = valor;
        fim = (fim + 1) % elementos.length;
        tamanho++;
    }

    // dequeue() → Remove um inteiro da fila.
    public int dequeue() {
        if (isEmpty()) {
            throw new IllegalStateException("Fila vazia");
        }
        int valor = elementos[inicio];
        inicio = (inicio + 1) % elementos.length;
        tamanho--;
        return valor;
    }

    // front() → Retorna o inteiro que está na frente da fila.
    public int front() {
        if (isEmpty()) {
            throw new IllegalStateException("Fila vazia");
        }
        return elementos[inicio];
    }

    // rear() → Retorna o inteiro que está no fim da fila.
    public int rear() {
        if (isEmpty()) {
            throw new IllegalStateException("Fila vazia");
        }
        return elementos[(fim - 1 + elementos.length) % elementos.length];
    }

    // size() → Retorna o tamanho da fila.
    public int size() {
        return tamanho;
    }

    // isEmpty() → Retorna true ou false dependendo da fila estar vazia ou não.
    public boolean isEmpty() {
        return tamanho == 0;
    }
}
